// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"time"
)

// Injectors from wire.go:

func InitMission(p PlayerParam, m MosterParam, t time.Time) (Mission, func(), error) {
	player, cleanup, err := NewPlayer(p)
	if err != nil {
		return Mission{}, nil, err
	}
	moster := NewMoster(m)
	mission := NewMission(player, moster, t)
	return mission, func() {
		cleanup()
	}, nil
}

func InitEndingA(p PlayerParam, m MosterParam) (EndingA, func(), error) {
	player, cleanup, err := NewPlayer(p)
	if err != nil {
		return EndingA{}, nil, err
	}
	moster := NewMoster(m)
	endingA := EndingA{
		Player: player,
		Moster: moster,
	}
	return endingA, func() {
		cleanup()
	}, nil
}

func InitEndingB(p PlayerParam, m MosterParam) (EndingB, func(), error) {
	player, cleanup, err := NewPlayer(p)
	if err != nil {
		return EndingB{}, nil, err
	}
	moster := NewMoster(m)
	endingB := EndingB{
		Player: player,
		Moster: moster,
	}
	return endingB, func() {
		cleanup()
	}, nil
}

func InitManMission(p PlayerParam, t time.Time) (*Mission, func(), error) {
	player, cleanup, err := NewPlayer(p)
	if err != nil {
		return nil, nil, err
	}
	moster := _wireMosterValue
	mission := NewMission2(player, moster, t)
	return mission, func() {
		cleanup()
	}, nil
}

var (
	_wireMosterValue = birdMoster
)

func InitMissionResult(p PlayerParam, m MosterParam, t time.Time) (Win, func(), error) {
	player, cleanup, err := NewPlayer(p)
	if err != nil {
		return Win{}, nil, err
	}
	moster := NewMoster(m)
	mission := NewMission(player, moster, t)
	win := mission.Win
	return win, func() {
		cleanup()
	}, nil
}

// wire.go:

// ProviderSet
var mosterPlayerSet = wire.NewSet(NewMoster, NewPlayer, NewMission)

// 结构构造器
var endingASet = wire.NewSet(mosterPlayerSet, wire.Struct(
	new(EndingA), "Player", "Moster",
))

var endingBset = wire.NewSet(mosterPlayerSet, wire.Struct(
	new(EndingB), "Player", "Moster",
))

// 绑定值, 值拷贝
var birdMoster = Moster{Name: "bird"}
